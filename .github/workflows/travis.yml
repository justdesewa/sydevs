name: Build and Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - Rasheedat/ci
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        cc: [gcc-12, clang-14] # Supported compilers in Ubuntu repositories.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        # Install compilers based on the matrix
        if [[ "${{ matrix.cc }}" == "gcc-12" ]]; then
          sudo apt-get install -y g++-12
          export CC=gcc-12
          export CXX=g++-12
        elif [[ "${{ matrix.cc }}" == "clang-14" ]]; then
          sudo apt-get install -y clang-14 libc++-14-dev libc++abi-14-dev
          export CC=clang-14
          export CXX=clang++-14
        fi
        # Install additional dependencies
        sudo apt-get install -y cmake doxygen graphviz

    - name: Configure with CMake
      run: |
        mkdir build
        cd build
        cmake ..

    - name: Build project
      run: |
        cd build
        make

    - name: Generate Documentation
      if: github.event_name == 'push' || github.ref == 'refs/tags/*'
      run: |
        if [ -f doxygen.config ]; then
          (cat doxygen.config; echo "PROJECT_NUMBER=${{ github.ref_name }}") | doxygen -
        fi

    - name: Archive Artifacts
      run: |
        # Create artifact directories
        mkdir -p artifacts/lib artifacts/include/sydevs/core artifacts/include/sydevs/systems artifacts/include/sydevs/time
        # Copy headers
        if [[ -d src/sydevs/core ]]; then
          cp src/sydevs/core/*.h artifacts/include/sydevs/core || true
        fi
        if [[ -d src/sydevs/systems ]]; then
          cp src/sydevs/systems/*.h artifacts/include/sydevs/systems || true
        fi
        if [[ -d src/sydevs/time ]]; then
          cp src/sydevs/time/*.h artifacts/include/sydevs/time || true
        fi
        # Copy compiled libraries
        if [[ -d build ]]; then
          cp build/libSyDEVS* artifacts/lib || true
        fi
        mkdir -p $(dirname "SyDEVS-${{ github.ref_name }}.zip")
        # Create final archive
        zip -r SyDEVS-${{ github.ref_name }}.zip artifacts

    - name: Package Documentation
      if: github.event_name == 'push' || github.ref == 'refs/tags/*'
      run: |
        if [ -d doc/html ]; then
          zip -r SyDEVS-${{ github.ref_name }}_api-reference.zip doc/html
        fi

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: SyDEVS-${{ github.ref_name }}.zip SyDEVS-${{ github.ref_name }}_api-reference.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    - name: Deploy Documentation
      if: github.event_name == 'push' || github.ref == 'refs/tags/*'
      run: bash scripts/deploy_docs.sh

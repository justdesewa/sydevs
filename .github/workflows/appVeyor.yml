name: Build and Deploy SyDEVS

on:
  push:
  pull_request:
    branches:
      - Rasheedat/ci
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-2022  # Using windows-2022 to ensure we have the latest Visual Studio versions

    strategy:
      matrix:
        configuration: [Release, Debug]
        vs_version: ["Visual Studio 16 2019", "Visual Studio 17 2022"]

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Visual Studio Build Tools (if not already available)
      - name: Install Visual Studio Build Tools
        run: |
          if (-Not (Test-Path "$env:ProgramFiles(x86)\Microsoft Visual Studio\2019\BuildTools")) {
            Write-Host "Installing Visual Studio Build Tools 2019"
            # Install Visual Studio Build Tools 2019
            choco install visualstudio2019buildtools --version=16.11.7 --yes
          }
          if (-Not (Test-Path "$env:ProgramFiles(x86)\Microsoft Visual Studio\2022\BuildTools")) {
            Write-Host "Installing Visual Studio Build Tools 2022"
            # Install Visual Studio Build Tools 2022
            choco install visualstudio2022buildtools --version=17.0.0 --yes
          }

      # Verify Visual Studio Installation
      - name: Verify Visual Studio Installation
        run: |
          where msbuild
          vswhere -all -format json

      # Set up Visual Studio
      - name: Set up MSBuild for Visual Studio
        uses: microsoft/setup-msbuild@v1

      # Configure the CMake build system
      - name: Configure with CMake
        run: |
          cmake -G "${{ matrix.vs_version }}" -S . -B build

      # Build the project
      - name: Build with MSBuild
        run: |
          cmake --build build --config ${{ matrix.configuration }} --parallel

      # Archive artifacts
      - name: Archive artifacts
        run: |
          cd build
          CONTENT_NAME="sydevs-${GITHUB_REF_NAME:-${GITHUB_SHA}}"
          mkdir -p $CONTENT_NAME/lib $CONTENT_NAME/include/sydevs/{core,systems,time}

          # Copy headers
          if exist ..\src\sydevs\core (xcopy ..\src\sydevs\core $CONTENT_NAME\include\sydevs\core /s /i)
          if exist ..\src\sydevs\systems (xcopy ..\src\sydevs\systems $CONTENT_NAME\include\sydevs\systems /s /i)
          if exist ..\src\sydevs\time (xcopy ..\src\sydevs\time $CONTENT_NAME\include\sydevs\time /s /i)

          # Copy library files
          xcopy ${{ matrix.configuration }} $CONTENT_NAME\lib /s /i

          # Include license
          copy ..\LICENSE.md $CONTENT_NAME

          ARCHIVE_NAME="SyDEVS-${GITHUB_REF_NAME:-${GITHUB_SHA}}_Win64_${{ matrix.vs_version }}_${{ matrix.configuration }}.zip"
          7z a $ARCHIVE_NAME.zip $CONTENT_NAME

          # Export archive for later steps
          echo "ARCHIVE_NAME=$ARCHIVE_NAME.zip" >> $GITHUB_ENV

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ${{ env.ARCHIVE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Deploy release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ARCHIVE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
